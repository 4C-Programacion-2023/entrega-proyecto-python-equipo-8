import json

class Pokemon:
    def __init__(self, nombre, ataque, defensa, PS, nivel):
        self.nombre = nombre
        self.ataque = ataque
        self.defensa = defensa
        self.PS = PS
        self.PS_max = PS
        self.nivel = nivel
        self.experiencia = 0
        self.exp_siguiente_nivel = 100

    def perder_PS(self, cantidad):
        self.PS = max(0, self.PS - cantidad)
        print("Se han perdido {} puntos de vida. PS restantes: {}".format(cantidad, self.PS))
        if self.PS == 0:
            print("¡El Pokémon ha muerto!")

    def calcular_daño(self, oponente):
        daño_bruto = (((2 * self.nivel / 5 + 2) * self.ataque / oponente.defensa) / 50 + 2)
        return int(daño_bruto)

    def ganar_experiencia(self, cantidad):
        self.experiencia += cantidad
        print("El Pokémon ha ganado {} puntos de experiencia.".format(cantidad))
        while self.experiencia >= self.exp_siguiente_nivel:
            self.subir_nivel()

    def subir_nivel(self):
        self.nivel += 1
        self.experiencia -= self.exp_siguiente_nivel
        self.exp_siguiente_nivel = int(self.exp_siguiente_nivel * 1.5)
        print("¡El Pokémon ha subido de nivel! Nivel actual: {}".format(self.nivel))


class Pocion:
    def __init__(self, nombre, cantidad_regen):
        self.nombre = nombre
        self.cantidad_regen = cantidad_regen

    def usar(self, pokemon):
        pokemon.PS = min(pokemon.PS_max, pokemon.PS + self.cantidad_regen)
        print("{} ha usado {} y ha regenerado {} puntos de vida.".format(pokemon.nombre, self.nombre, self.cantidad_regen))


class Jugador:
    def __init__(self, nombre):
        self.nombre = nombre
        self.pokemons = []
        self.mochila = {}

    def agregar_pokemon(self, pokemon: Pokemon):
        self.pokemons.append(pokemon)

    def inicializar_mochila(self, pocion, cantidad):
        self.mochila[pocion.nombre] = cantidad

    def usar_pocion(self, pokemon):
        if "Poción de Vida" in self.mochila and self.mochila["Poción de Vida"] > 0:
            print("¿Deseas usar la Poción de Vida para curar a tu Pokémon?")
            print("1. Sí   2. No")
            respuesta = int(input())
            if respuesta == 1:
                cantidad_regen = min(20, pokemon.PS_max - pokemon.PS)
                pokemon.PS += cantidad_regen
                self.mochila["Poción de Vida"] -= 1
                print("{} ha usado Poción de Vida y ha regenerado {} puntos de vida.".format(pokemon.nombre, cantidad_regen))
            else:
                print("Decidiste no usar la Poción de Vida.")

    def combatir(self, jugador_oponente):
        if len(self.pokemons) == 0 or len(jugador_oponente.pokemons) == 0:
            print("No hay suficientes Pokémon para el combate.")
            return

        pokemon_jugador_1 = self.pokemons[0]
        pokemon_jugador_2 = jugador_oponente.pokemons[0]

        print("¡Comienza el combate entre {} y {}!".format(pokemon_jugador_1.nombre, pokemon_jugador_2.nombre))

        turno = 1
        while pokemon_jugador_1.PS > 0 and pokemon_jugador_2.PS > 0:
            if turno % 2 != 0:
                atacante = pokemon_jugador_1
                defensor = pokemon_jugador_2
                jugador_atacante = self
                jugador_defensor = jugador_oponente
            else:
                atacante = pokemon_jugador_2
                defensor = pokemon_jugador_1
                jugador_atacante = jugador_oponente
                jugador_defensor = self

            print("""
                Turno de {}
                1. Atacar   2. Mochila
                3. Huir
                """.format(atacante.nombre))
            respuesta = int(input())
            if respuesta == 1:
                print("{} ataca a {}.".format(atacante.nombre, defensor.nombre))
                daño = atacante.calcular_daño(defensor)
                defensor.perder_PS(daño)
            elif respuesta == 2:
                print("Contenido de la mochila del {}:".format(jugador_atacante.nombre))
                for item, cantidad in jugador_atacante.mochila.items():
                    print("- {} (Cantidad: {})".format(item, cantidad))
                print("Elige el número de la poción que deseas usar:")
                num_pocion = int(input())
                pocion_seleccionada = None
                if num_pocion in range(1, len(jugador_atacante.mochila) + 1):
                    pocion_seleccionada = list(jugador_atacante.mochila.keys())[num_pocion - 1]
                if pocion_seleccionada == "Poción de Vida":
                    jugador_atacante.usar_pocion(atacante)
                else:
                    print("No tienes esa poción en tu mochila.")
            elif respuesta == 3:
                break
            if defensor.PS <= 0:
                print("{} ha debilitado a {}.".format(atacante.nombre, defensor.nombre))
                jugador_defensor.pokemons.remove(defensor)

            turno += 1

        if pokemon_jugador_1.PS <= 0:
            print("{} ha ganado el combate.".format(pokemon_jugador_2.nombre))
        else:
            print("{} ha ganado el combate.".format(pokemon_jugador_1.nombre))


Bulbasaur = Pokemon("Bulbasaur", 49, 49, 45, 1)
Squirtle = Pokemon("Squirtle", 48, 65, 44, 1)
Charmander = Pokemon("Charmander", 52, 43, 39, 1)
pocion_vida = Pocion("Poción de Vida", 20)

jugador_1 = Jugador("Jugador 1")
jugador_2 = Jugador("Jugador 2")

ingreso = int(input("""
Pokemon Python Edition
1. Jugar
2. Partidas guardadas
"""))
if ingreso == 1:
    print("""
Jugador 1, elige tu Pokémon:
1. Bulbasaur
2. Charmander
3. Squirtle
""")
respuesta = int(input())

while respuesta not in [1, 2, 3]:
    print("Opción no válida. Elige nuevamente.")
    respuesta = int(input())

if respuesta == 1:
    jugador_1.agregar_pokemon(Bulbasaur)
    print("Pokémon seleccionado con éxito.")
    print("""
Jugador 2, elige tu Pokémon:
1. Charmander
2. Squirtle
""")
    respuesta = int(input())
    while respuesta not in [1, 2]:
        print("Opción no válida. Elige nuevamente.")
        respuesta = int(input())
    if respuesta == 1:
        jugador_2.agregar_pokemon(Charmander)
        print("Pokémon seleccionado con éxito.")
    elif respuesta == 2:
        jugador_2.agregar_pokemon(Squirtle)
        print("Pokémon seleccionado con éxito.")

elif respuesta == 2:
    jugador_1.agregar_pokemon(Charmander)
    print("Pokémon seleccionado con éxito.")
    print("""
Jugador 2, elige tu Pokémon:
1. Bulbasaur
2. Squirtle
""")
    respuesta = int(input())
    while respuesta not in [1, 2]:
        print("Opción no válida. Elige nuevamente.")
        respuesta = int(input())
    if respuesta == 1:
        jugador_2.agregar_pokemon(Bulbasaur)
        print("Pokémon seleccionado con éxito.")
    elif respuesta == 2:
        jugador_2.agregar_pokemon(Squirtle)
        print("Pokémon seleccionado con éxito.")

elif respuesta == 3:
    jugador_1.agregar_pokemon(Squirtle)
    print("Pokémon seleccionado con éxito.")
    print("""
Jugador 2, elige tu Pokémon:
1. Bulbasaur
2. Charmander
""")
    respuesta = int(input())
    while respuesta not in [1, 2]:
        print("Opción no válida. Elige nuevamente.")
        respuesta = int(input())
    if respuesta == 1:
        jugador_2.agregar_pokemon(Bulbasaur)
        print("Pokémon seleccionado con éxito.")
    elif respuesta == 2:
        jugador_2.agregar_pokemon(Charmander)
        print("Pokémon seleccionado con éxito.")

jugador_1.inicializar_mochila(pocion_vida, 5)
jugador_2.inicializar_mochila(pocion_vida, 5)

jugador_1.combatir(jugador_2)

print("\nResultado del combate:")
print("Jugador 1:")
for pokemon in jugador_1.pokemons:
    print("- {} (PS: {})".format(pokemon.nombre, pokemon.PS))
print("\nJugador 2:")
for pokemon in jugador_2.pokemons:
    print("- {} (PS: {})".format(pokemon.nombre, pokemon.PS))

if len(jugador_1.pokemons) > 0 and len(jugador_2.pokemons) == 0:
    print("\n¡Jugador 1 ha ganado el combate!")
    ganador = jugador_1.nombre
    perdedor = jugador_2.nombre
elif len(jugador_1.pokemons) == 0 and len(jugador_2.pokemons) > 0:
    print("\n¡Jugador 2 ha ganado el combate!")
    ganador = jugador_2.nombre
    perdedor = jugador_1.nombre
else:
    print("\n¡Ha sido un empate!")
    ganador = "Empate"
    perdedor = "Empate"

estadisticas = {
    "Ganador": ganador,
    "Perdedor": perdedor,
    "Jugador 1": [pokemon.__dict__ for pokemon in jugador_1.pokemons],
    "Jugador 2": [pokemon.__dict__ for pokemon in jugador_2.pokemons],
}

with open("estadisticas.json", "w") as archivo:
    json.dump(estadisticas, archivo, indent=2)

print("Gracias por jugar. ¡Hasta luego!")